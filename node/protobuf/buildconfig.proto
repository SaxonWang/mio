// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.devops.mio/node.buildconfig";
option java_outer_classname = "BuildConfigProto";

// target package name
package protobuf;

// The greeting service definition.
service BuildConfigService {

    rpc SourceCodePull (SourceCodePullRequest) returns (SourceCodePullResponse) {}
    rpc Compile (CompileRequest) returns (CompileResponse) {}
    rpc ImageBuild (ImageBuildRequest) returns (ImageBuildResponse) {}
    rpc ImagePush (ImagePushRequest) returns (ImagePushResponse) {}
    rpc test (TestsRequest) returns (TestsResponse) {}
    rpc command (CommandRequest) returns (CommandResponse) {}
}
//rpc command (CommandRequest) returns (CommandResponse) {}
//SourceCodePull
message SourceCodePullRequest {
    string cloneType = 1;
    string url       = 2;
    string branch    = 3;
    string dstDir    = 4;
    string username  = 5;
    string password  = 6;
    int32  depth =7;
    string namespace = 8;
    string name = 9;
    string token = 10;
}

message SourceCodePullResponse {
    int32 code = 1;
    string message = 2;
    SourceCodePullRequest data = 3;
}

//Compile
message CompileRequest {
    repeated BuildCommand CompileCmd  = 1;
    string namespace = 2;
    string name = 3;
}
message BuildCommand {
    string codeType   = 1;
    string execType    = 2;
    string script   = 3;
    string commandName = 4;
    repeated string Params = 5;
}

message CompileResponse {
    int32 code = 1;
    string message = 2;
    CompileRequest data = 3;
}

//imageBuild
message ImageBuildRequest {
    string app                  = 1;
    string s2iImage             = 2;
    repeated string tags        = 3;
    repeated string dockerFile  = 4;
    string namespace = 5;
    string name = 6;
    string username = 7;
    string password = 8;
}

message ImageBuildResponse {
    int32 code = 1;
    string message = 2;
    ImageBuildRequest data = 3;
}

//imagePush
message ImagePushRequest {
    repeated string tags    = 1;
    string namespace = 2;
    string name = 3;
    string username = 4;
    string password = 5;
    string registryToken = 6;
}

message ImagePushResponse {
    int32 code =1;
    string message = 2;
    ImagePushRequest data = 3;
}


//test
message TestCommand {
    string execType    = 1;
    string script   = 2;
    string commandName = 3;
    repeated string Params = 4;
}

message TestsRequest {
    repeated TestCommand TestCmd  = 1;
    string codeType   = 2;
    string namespace = 3;
    string name = 4;
}

message TestsResponse {
    int32 code = 1;
    string message = 2;
    TestsRequest data = 3;
}

//command
message Command {
    string execType    = 1;
    string script   = 2;
    string commandName = 3;
    repeated string Params = 4;
}

message CommandRequest {
    repeated Command CommandList  = 1;
    string codeType   = 2;
    string namespace = 3;
    string name = 4;
}

message CommandResponse {
    int32 code = 1;
    string message = 2;
    TestsRequest data = 3;
}