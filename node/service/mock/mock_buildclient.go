// Code generated by MockGen. DO NOT EDIT.
// Source: hidevops.io/mio/node/pkg/service (interfaces: BuildConfigClient)

// Package service is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	v1alpha1 "hidevops.io/mioclient/pkg/apis/mio/v1alpha1"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	watch "k8s.io/apimachinery/pkg/watch"
	reflect "reflect"
)

// MockBuildConfigClient is a mock of BuildConfigClient interface
type MockBuildConfigClient struct {
	ctrl     *gomock.Controller
	recorder *MockBuildConfigClientMockRecorder
}

// MockBuildConfigClientMockRecorder is the mock recorder for MockBuildConfigClient
type MockBuildConfigClientMockRecorder struct {
	mock *MockBuildConfigClient
}

// NewMockBuildConfigClient creates a new mock instance
func NewMockBuildConfigClient(ctrl *gomock.Controller) *MockBuildConfigClient {
	mock := &MockBuildConfigClient{ctrl: ctrl}
	mock.recorder = &MockBuildConfigClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockBuildConfigClient) EXPECT() *MockBuildConfigClientMockRecorder {
	return m.recorder
}

// Create mocks base method
func (m *MockBuildConfigClient) Create(arg0 *v1alpha1.Build) (*v1alpha1.Build, error) {
	ret := m.ctrl.Call(m, "Create", arg0)
	ret0, _ := ret[0].(*v1alpha1.Build)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create
func (mr *MockBuildConfigClientMockRecorder) Create(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockBuildConfigClient)(nil).Create), arg0)
}

// Delete mocks base method
func (m *MockBuildConfigClient) Delete(arg0, arg1 string) error {
	ret := m.ctrl.Call(m, "Delete", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete
func (mr *MockBuildConfigClientMockRecorder) Delete(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockBuildConfigClient)(nil).Delete), arg0, arg1)
}

// Get mocks base method
func (m *MockBuildConfigClient) Get(arg0, arg1 string) (*v1alpha1.Build, error) {
	ret := m.ctrl.Call(m, "Get", arg0, arg1)
	ret0, _ := ret[0].(*v1alpha1.Build)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get
func (mr *MockBuildConfigClientMockRecorder) Get(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockBuildConfigClient)(nil).Get), arg0, arg1)
}

// Update mocks base method
func (m *MockBuildConfigClient) Update(arg0, arg1 string, arg2 *v1alpha1.Build) (*v1alpha1.Build, error) {
	ret := m.ctrl.Call(m, "Update", arg0, arg1, arg2)
	ret0, _ := ret[0].(*v1alpha1.Build)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Update indicates an expected call of Update
func (mr *MockBuildConfigClientMockRecorder) Update(arg0, arg1, arg2 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockBuildConfigClient)(nil).Update), arg0, arg1, arg2)
}

// UpdateBuildStatus mocks base method
func (m *MockBuildConfigClient) UpdateBuildStatus(arg0, arg1, arg2, arg3 string) (*v1alpha1.Build, error) {
	ret := m.ctrl.Call(m, "UpdateBuildStatus", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(*v1alpha1.Build)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateBuildStatus indicates an expected call of UpdateBuildStatus
func (mr *MockBuildConfigClientMockRecorder) UpdateBuildStatus(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateBuildStatus", reflect.TypeOf((*MockBuildConfigClient)(nil).UpdateBuildStatus), arg0, arg1, arg2, arg3)
}

// Watch mocks base method
func (m *MockBuildConfigClient) Watch(arg0 v1.ListOptions, arg1, arg2 string) (watch.Interface, error) {
	ret := m.ctrl.Call(m, "Watch", arg0, arg1, arg2)
	ret0, _ := ret[0].(watch.Interface)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Watch indicates an expected call of Watch
func (mr *MockBuildConfigClientMockRecorder) Watch(arg0, arg1, arg2 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Watch", reflect.TypeOf((*MockBuildConfigClient)(nil).Watch), arg0, arg1, arg2)
}
